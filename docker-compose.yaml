version: '3'
services:

  rabbitmq:
    image: arm64v8/rabbitmq:3-management   # ARM-compatible version of RabbitMQ
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_ERLANG_COOKIE: "A_LONG_RANDOM_STRING"
    volumes:
      - ./RabbitMQ/rabbitmq_setup.sh:/etc/rabbitmq/rabbitmq_setup.sh # Script to create additional users
    command: /bin/bash -c rabbitmq-server

    restart: unless-stopped

  sensor-monitor:
    build:
      context: ./Sensors  # Context for the build is now Sensors directory
      dockerfile: SensorsDockerFile   # This will pick the Dockerfile inside Sensors
    container_name: sensor-monitor
    depends_on:
      - rabbitmq

    restart: unless-stopped

  web-service:
    build:
      context: ./Web_Service  # Context for the build is now Web_Service directory
      dockerfile: WebServiceDockerFile   # This will pick the Dockerfile inside Web_Service
    container_name: web-service
    ports:
      - "5000:5000"  # Map Flask port to the host
    depends_on:
      - rabbitmq
      - sensor-monitor
      
    restart: unless-stopped